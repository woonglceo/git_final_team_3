<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mypageSQL">
	<!-- 특정 회원의 wish_list 불러오기 -->
	<select id="getWishList" parameterType="java.util.Map" resultType="WishListDTO">
		select * 
			from (select rownum rn, totalData.* 
				from (select * from wish_list where userId=#{userId} order by wishlistId desc) totalData) 
		where rn between #{startNum} and #{endNum}
	</select>
	
	<!-- 특정 테이블 전체 데이터 수 -->
	<select id="getTotalDB" parameterType="java.util.Map" resultType="Integer">
		select count(*) from ${tableName} where userId=#{userId}
	</select>
	
	<!-- wish 상품 삭제 -->
	<delete id="deleteWish" parameterType="Integer">
		delete from wish_list where wishListId=#{wishListId}
	</delete>
	
	<!-- wish 상품 추가 -->
	<insert id="addWish" parameterType="java.util.Map">
		insert into wish_list values(SEQ_WISH_LIST.nextval, #{userId}, #{productId})
	</insert>
	
	<!-- 특정 상품 wish 여부 -->
	<select id="getWishOnOff" parameterType="java.util.Map" resultType="WishListDTO">
		select * from wish_list where userId=#{userId} and productId=#{productId}
	</select>
	
	<!-- 리스트를 가져오기 전 마감기한 업데이트 -->
	<update id="updateStaus" parameterType="java.util.Date">
	<![CDATA[
		update purchase_table set status=1 where regDate <= #{today}
	]]>
	</update>
	
	<!-- 특정 회원의 구매내역 불러오기 -->
	<select id="getBuyList" parameterType="java.util.Map" resultType="PurchaseDTO">
		select * 
			from (select rownum rn, totalData.* 
				from (select * from purchase_table where userId=#{userId} order by purchaseId desc) totalData) 
		where rn between #{startNum} and #{endNum}
	</select>
	
	
	<!-- 구매가를 위한 판매테이블 불러오기 -->
	<select id="getPrice" parameterType="Integer" resultType="SalesDTO">
		select * from sales_table where productId=#{productId}
	</select>
	
	<!-- 특정회원의 총 거래 개수 구하기 -->
	<select id="getTotalBuying" parameterType="Integer" resultType="Integer">
		select count(*) from purchase_table where userId=#{userId}
	</select>

	<!-- 기간 내 거래내역 -->
	<select resultType="PurchaseDTO" parameterType="java.util.Map" id="getMonthBuyingList">
	  <if test='option.equals("최근 2개월")'>
		select *from (select rownum rn, totalData.*
			from (select * from purchase_table where userId=#{userId} and sysdate >= regDate and regDate >= sysDate -60
			order by purchaseId desc) totalData)
		where rn between #{startNum} and #{endNum} 
	  </if>
	  <if test='option.equals("4개월")'>
		select *from (select rownum rn, totalData.*
			from (select * from purchase_table where userId=#{userId} and sysdate >= regDate and regDate >= sysDate -120
			order by purchaseId desc) totalData)
		where rn between #{startNum} and #{endNum} 
	  </if>
	  <if test='option.equals("6개월")'>
		select *from (select rownum rn, totalData.*
			from (select * from purchase_table where userId=#{userId} and sysdate >= regDate and regDate >= sysDate -180
			order by purchaseId desc) totalData)
		where rn between #{startNum} and #{endNum} 
	  </if>
	</select>
	
	<!-- 기간 내 거래내역의 개수 -->
	<select resultType="int" parameterType="int" id="getTotalMonthBuying">	
		select count(*) from (select rownum rn, totalData.*
			from (select * from purchase_table where userId=#{userId} and sysdate >= regDate and regDate >= sysDate - 60
			order by purchaseId desc) totalData)
	</select>
	
	<!-- 달력으로 선택된 기간 내 거래 내역 -->
	<select resultType="PurchaseDTO" parameterType="java.util.Map" id="getMonthBuyingList2">
		select *from (select rownum rn, totalData.*
			from (select * from purchase_table where userId=#{userId} and regDate >= #{date1} and #{date2} >= regDate 
			order by purchaseId desc) totalData)
		where rn between #{startNum} and #{endNum}
	</select>
	
	<!-- 달력으로 선택된 기간 내 거래 개수 -->
	<select resultType="int" parameterType="java.util.Map" id="getTotalMonthBuying2">	
		select count(*) from (select rownum rn, totalData.*
			from (select * from purchase_table where userId=#{userId} and regDate >= #{date1} and #{date2} >= regDate 
			order by purchaseId desc) totalData)
	</select>
		
	<!-- 특정 회원의 거래중인 내역 불러오기 -->
	<select id="getIngBuyingList" parameterType="java.util.Map" resultType="PurchaseDTO">
		select * from (select rownum rn, totalData.* 
			from (select tt.productId, tt.status, tt.productSize, tt.regDate 
				from (select * from purchase_table where userId = #{userId}) tt
    					inner join deal_table d
    					on d.purchaseId = tt.purchaseId  order by d.purchaseId desc) totalData)
  		  where rn between #{startNum} and #{endNum}
	</select>
	
	<!-- 현재 거래중인 것의 개수 구하기 -->
	<select id="getTotalIngBuying" resultType="Integer">
		select count(*) from
    		(select * from purchase_table where userId=#{userId} and status=0) tt
    		inner join deal_table d
   		     on d.purchaseId = tt.purchaseId
	</select>
	
	<!-- 특정 회원의 종료된 거래 리스트-->
	<select id="getEndBuyingList" parameterType="java.util.Map" resultType="PurchaseDTO">
	SELECT * FROM
          (SELECT ROWNUM rn, o.* FROM           
              (select p.productname AS productName, p.img1 AS img1, d.regDate AS tradeDate, p1.status AS status, s.price AS productPrice, s.productsize AS productSize  
                  from product_table p,                    
                       purchase_table p1,
                       deal_table d ,
                       sales_table s
                   
                  where p1.purchaseId = d.purchaseId
                    and p1.productId = p.productId
                    and s.productId = p.productId
                    and p1.userId = ${userId}
                    and p1.status = 1
                                
                 ORDER BY p1.purchaseId desc)o)
             WHERE rn BETWEEN #{startNum} and #{endNum}
     </select>
     
	<!-- 특정회원의 종료된 거래 개수 구하기 -->
	<select id="getEndBuying" parameterType="Integer" resultType="Integer">
		SELECT count(*) FROM
          (SELECT ROWNUM rn, o.* FROM           
              (select p.productname AS productName, p.img1 AS img1, d.regDate AS tradeDate, p1.status AS status, s.price AS productPrice, s.productsize AS productSize  
                  from product_table p,                    
                       purchase_table p1,
                       deal_table d ,
                       sales_table s
                   
                  where p1.purchaseId = d.purchaseId
                    and p1.productId = p.productId
                    and s.productId = p.productId
                    and p1.userId = ${userId}
                    and p1.status = 1
                                 
                 ORDER BY p1.purchaseId desc)o)
	</select>
	
	<!-- 특정 회원의 2 / 4 / 6 개월간의 종료된 거래내역 -->
	<select id="getMonthEndBuyingList" parameterType="java.util.Map" resultType="PurchaseDTO">
	SELECT * FROM
          (SELECT ROWNUM rn, o.* FROM           
              (select p.productname AS productName, p.img1 AS img1, d.regDate AS tradeDate, p1.status AS status, s.price AS productPrice, s.productsize AS productSize  
                  from product_table p,                    
                       purchase_table p1,
                       deal_table d ,
                       sales_table s
             
            <if test='option.equals("최근 2개월")'> 
                     
                where p1.purchaseId = d.purchaseId
                    and p1.productId = p.productId
                    and s.productId = p.productId
                    and p1.userId = #{userId}
                    and sysdate >= d.regDate and d.regDate >= sysDate -60
                    and p1.status = 1
           	</if> 
           	<if test='option.equals("4개월")'> 
                     
                where p1.purchaseId = d.purchaseId
                    and p1.productId = p.productId
                    and s.productId = p.productId
                    and p1.userId = #{userId}
                    and sysdate >= d.regDate and d.regDate >= sysDate -120
                    and p1.status = 1
           	</if>   
           	<if test='option.equals("6개월")'> 
                     
                where p1.purchaseId = d.purchaseId
                    and p1.productId = p.productId
                    and s.productId = p.productId
                    and p1.userId = #{userId}
                    and sysdate >= d.regDate and d.regDate >= sysDate -180
                    and p1.status = 1
           	</if>         
             ORDER BY p1.purchaseId desc)o)
             WHERE rn BETWEEN #{startNum} and #{endNum}
     </select>
     
     <select id="getTotalEndMonth" parameterType="java.util.Map" resultType="int">
		SELECT count(*) FROM
	          (SELECT ROWNUM rn, o.* FROM           
	              (select p.productname AS productName, p.img1 AS img1, d.regDate AS tradeDate, p1.status AS status, s.price AS productPrice, s.productsize AS productSize  
	                  from product_table p,                    
	                       purchase_table p1,
	                       deal_table d ,
	                       sales_table s
	             
	            <if test='option.equals("최근 2개월")'> 
	                     
	                where p1.purchaseId = d.purchaseId
	                    and p1.productId = p.productId
	                    and s.productId = p.productId
	                    and p1.userId = #{userId}
	                    and sysdate >= d.regDate and d.regDate >= sysDate -60
	                    and p1.status = 1
	           	</if> 
	           	<if test='option.equals("4개월")'> 
	                     
	                where p1.purchaseId = d.purchaseId
	                    and p1.productId = p.productId
	                    and s.productId = p.productId
	                    and p1.userId = #{userId}
	                    and sysdate >= d.regDate and d.regDate >= sysDate -120
	                    and p1.status = 1
	           	</if>   
	           	<if test='option.equals("6개월")'> 
	                     
	                where p1.purchaseId = d.purchaseId
	                    and p1.productId = p.productId
	                    and s.productId = p.productId
	                    and p1.userId = #{userId}
	                    and sysdate >= d.regDate and d.regDate >= sysDate -180
	                    and p1.status = 1
	           	</if>         
	             ORDER BY p1.purchaseId desc)o)
     </select>
     
     <!-- 달력으로 선택된 기간 내 거래 내역 -->
	<select resultType="PurchaseDTO" parameterType="java.util.Map" id="getMonthEndBuyingList3">
	<![CDATA[
		SELECT * FROM
          (SELECT ROWNUM rn, o.* FROM           
              (select p.productname AS productName, p.img1 AS img1, d.regDate AS tradeDate, p1.status AS status, s.price AS productPrice, s.productsize AS productSize  
                  from product_table p,                    
                       purchase_table p1,
                       deal_table d ,
                       sales_table s
                       
                    where p1.purchaseId = d.purchaseId
	                    and p1.productId = p.productId
	                    and s.productId = p.productId
	                    and p1.userId = #{userId}
	                    and d.regDate >= #{date1} and #{date2 + 1} > d.regDate
	                    and p1.status = 1
					ORDER BY p1.purchaseId desc)o)
            WHERE rn BETWEEN #{startNum} and #{endNum}
     ]]> 
	</select>
	
	<select resultType="int" parameterType="java.util.Map" id="getTotalMonthBuying3">
	<![CDATA[
		SELECT count(*) FROM
          (SELECT ROWNUM rn, o.* FROM           
              (select p.productname AS productName, p.img1 AS img1, d.regDate AS tradeDate, p1.status AS status, s.price AS productPrice, s.productsize AS productSize  
                  from product_table p,                    
                       purchase_table p1,
                       deal_table d ,
                       sales_table s
                       
                    where p1.purchaseId = d.purchaseId
	                    and p1.productId = p.productId
	                    and s.productId = p.productId
	                    and p1.userId = #{userId}
	                    and d.regDate >= #{date1} and #{date2  + 1} > d.regDate
	                    and p1.status = 1
					ORDER BY p1.purchaseId desc)o)
	]]> 
	</select>
	
</mapper>